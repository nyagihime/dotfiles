#!/bin/sh
cd `tmux display-message -p -F "#{pane_current_path}"`
branch_name=`git branch | grep \*.* | sed -e 's/\*\ //'`
user_name=`git config --get user.name`
email_address=`git config --get user.email`

# ユーザー名、メールアドレスが一定文字以上ならトリムする
if test ${#user_name} -gt 4; then
  user_name=${user_name::4}..
fi

if test ${#email_address} -gt 6; then
  # アカウント部分を抽出
  email_account=${email_address%@*}
  # アカウント部分が4文字以上なら詰める
  if test ${#email_account} -gt 4; then
    email_account=${email_account:: 2}**${email_account: -2}
  fi

  # ドメイン部分を抽出
  email_domain=${email_address##*@}
  # ドメイン部分の最初のドットまでを取得して、どのアドレス化を判別しやすくする
  # （ただ、これだと、example@mail.example.com みたいな場合 mail になっちゃうけど
  email_domain=${email_domain%%.*}

  email_address=${email_account}@${email_domain}
fi

if [ $1 = "--name-only" ]; then
  vcs_usr=" ${user_name}"
elif [ $1 = "--mail-only" ]; then
  vcs_usr="${email_address}"
else
  vcs_usr="${user_name}[${email_address}]"
fi

if [ ! -z ${branch_name} ]; then

  # ブランチ名で色分け（とりあえずよく使う master / develop は専用カラーをあててみた）
  # TODO: remote と同期してるかとか、modified があるかとかでも色分けしたい

  # ブランチ名が一定以上の長さなら詰める
  if test ${#branch_name} -gt 3; then
      branch_disp=${branch_name::3}..
  else
      branch_disp=${branch_name}
  fi

  case ${branch_name} in
    "master" ) display_branch_name="#[fg=red]${branch_disp}";;
    "develop" ) display_branch_name="#[fg=green]${branch_disp}";;
    * )
    display_branch_name="#[fg=colour75]${branch_disp}";;
  esac

  # echo の中に以下の行を追加すると、表示できる
  # ブランチ情報
  #  "#[fg=yellow] :${display_branch_name}"\
  # ユーザー情報
  #  "#[fg=yellow] :${vcs_usr}"\
  # TODO: --name-only みたいに、コマンドライン引数でブランチ名を出すかを出し分けるようにする

  echo "#[bg=colour240 fg=colour236] "\
       "#[fg=yellow] :${vcs_usr}"\
       "#[default]"
else
  echo "#[bg=colour240 fg=colour232] "\
       "#[fg=colour245] "\
       "#[default]"
fi
